Question:- Syntax Learning Priority Queue.

Declare an Empty PriorityQueue q.
Take Single Integer T as input.
For next t Lines format(Case,x(optional)).
case 1. Print the Size of the PriorityQueue in a separate line.
case 2. Remove the smallest element from the PriorityQueue. If the queue is empty -1 then print  in a separate line.
case 3.Add Integer x to the  PriorityQueue s.
case 4. Print the smallest element of the PriorityQueue.If queue is empty print -1 in a seperate line.
Input Format

Single Integer T.
t Lines of format (Case,x(optional)).
Constraints

1 <= T <= 10^4
0 <= x <= 10^8
Output Format

According to case Print the information explained, if its not possible then -1.
Sample Input 0

7
3 3
3 1
4
1
2
2
2
Sample Output 0

1
2
-1
Explanation 0

 q= []  => q = [3]
 q= [3]  => q = [1,3]
 q= [1, 3] => min_element = 1
 q= [1, 3] => size = 2
 q= [1, 3] => q = [3]
 q= [3] => q = []
 q= [] => invalid_move(-1)

 ///Solutions...............

import java.io.*;
import java.util.*;
public class Solution {
    public static void main(String[] args) {
       Scanner sc=new Scanner(System.in);
         PriorityQueue<Integer> pq=new PriorityQueue<>();
          int t=sc.nextInt();
           for(int i=0;i<t;i++)
           {
               int option=sc.nextInt();
               if(option==1) {
                 System.out.println(pq.size());
               }else if(option==2) {
                   if(pq.isEmpty()) {
                      System.out.println(-1); 
                   }else {
                       pq.remove();
                   }
               }else if(option==3){
                   int x=sc.nextInt();
                   pq.add(x);
               }else if(option==4){
                   if(pq.isEmpty()) {
                       System.out.println(-1);
                   }else {
                       System.out.print(pq.peek());
                   }
                   System.out.println();
               }
           }
    }}
